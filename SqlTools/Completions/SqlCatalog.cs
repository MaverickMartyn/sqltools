using System.Collections.Generic;
using System.ComponentModel.Composition;

namespace SqlTools.Completions
{
    [Export]
    public class SqlCatalog
    {
        public List<Keyword> Keywords { get; } = new List<Keyword>
        {
            //keywords
            new Keyword("var",Category.Keyword),
            new Keyword("create",Category.Keyword),
            new Keyword("alter",Category.Keyword),
            new Keyword("drop",Category.Keyword),
            new Keyword("table",Category.Keyword),
            new Keyword("view",Category.Keyword),
            new Keyword("function",Category.Keyword),
            new Keyword("procedure",Category.Keyword),
            new Keyword("schema",Category.Keyword),
            new Keyword("index",Category.Keyword),
            new Keyword("trigger",Category.Keyword),
            new Keyword("select",Category.Keyword),
            new Keyword("insert",Category.Keyword),
            new Keyword("update",Category.Keyword),
            new Keyword("delete",Category.Keyword),
            new Keyword("truncate",Category.Keyword),
            new Keyword("declare",Category.Keyword),
            new Keyword("dump",Category.Keyword),
            new Keyword("from",Category.Keyword),
            new Keyword("where",Category.Keyword),
            new Keyword("group",Category.Keyword),
            new Keyword("order",Category.Keyword),
            new Keyword("by",Category.Keyword),
            new Keyword("asc",Category.Keyword),
            new Keyword("desc",Category.Keyword),
            new Keyword("set",Category.Keyword),
            new Keyword("into",Category.Keyword),
            new Keyword("values",Category.Keyword),
            new Keyword("identity",Category.Keyword),
            new Keyword("default",Category.Keyword),
            new Keyword("foreign",Category.Keyword),
            new Keyword("constraint",Category.Keyword),
            new Keyword("check",Category.Keyword),
            new Keyword("nocheck",Category.Keyword),
            new Keyword("union",Category.Keyword),
            new Keyword("inner",Category.Keyword),
            new Keyword("cross",Category.Keyword),
            new Keyword("join",Category.Keyword),
            new Keyword("left",Category.Keyword),
            new Keyword("right",Category.Keyword),
            new Keyword("outer",Category.Keyword),
            new Keyword("as",Category.Keyword),
            new Keyword("on",Category.Keyword),
            new Keyword("online",Category.Keyword),
            new Keyword("only",Category.Keyword),
            new Keyword("case",Category.Keyword),
            new Keyword("when",Category.Keyword),
            new Keyword("then",Category.Keyword),
            new Keyword("begin",Category.Keyword),
            new Keyword("end",Category.Keyword),
            new Keyword("if",Category.Keyword),
            new Keyword("else",Category.Keyword),
            new Keyword("while",Category.Keyword),
            new Keyword("for",Category.Keyword),
            new Keyword("distinct",Category.Keyword),
            new Keyword("with",Category.Keyword),
            new Keyword("tran",Category.Keyword),
            new Keyword("transaction",Category.Keyword),
            new Keyword("commit",Category.Keyword),
            new Keyword("rollback",Category.Keyword),
            new Keyword("freetext",Category.Keyword),
            new Keyword("backup",Category.Keyword),
            new Keyword("restore",Category.Keyword),
            new Keyword("null",Category.Keyword),
            new Keyword("unique",Category.Keyword),
            new Keyword("pivot",Category.Keyword),
            new Keyword("plan",Category.Keyword),
            new Keyword("unpivot",Category.Keyword),
            new Keyword("inserted",Category.Keyword),
            new Keyword("deleted",Category.Keyword),
            new Keyword("fetch",Category.Keyword),
            new Keyword("open",Category.Keyword),
            new Keyword("dbcc",Category.Keyword),
            new Keyword("cascade",Category.Keyword),
            new Keyword("collate",Category.Keyword),
            new Keyword("coalesce",Category.Keyword),
            new Keyword("coalesce",Category.Keyword),
            //operators
            new Keyword("like",Category.Operator),
            new Keyword("between",Category.Operator),
            new Keyword("having",Category.Operator),
            new Keyword("exists",Category.Operator),
            new Keyword("except",Category.Operator),
            new Keyword("all",Category.Operator),
            new Keyword("any",Category.Operator),
            new Keyword("some",Category.Operator),
            new Keyword("and",Category.Operator),
            new Keyword("or",Category.Operator),
            new Keyword("not",Category.Operator),
            new Keyword("in",Category.Operator),
            new Keyword("is",Category.Operator),
            //functions
            new Keyword("exec",Category.Function),
            new Keyword("execute",Category.Function),
            new Keyword("inull",Category.Function),
            new Keyword("iif",Category.Function),
            new Keyword("choose",Category.Function),
            //aggregates
            new Keyword("approx_count_distinct",Category.Function),
            new Keyword("avg",Category.Function),
            new Keyword("checksum_agg",Category.Function),
            new Keyword("count",Category.Function),
            new Keyword("count_big",Category.Function),
            new Keyword("grouping",Category.Function),
            new Keyword("grouping_id",Category.Function),
            new Keyword("min",Category.Function),
            new Keyword("max",Category.Function),
            new Keyword("stdev",Category.Function),
            new Keyword("stdevp",Category.Function),
            new Keyword("string_agg",Category.Function),
            new Keyword("sum",Category.Function),
            new Keyword("var",Category.Function),
            new Keyword("varp",Category.Function),
            //strings
            new Keyword("ascii",Category.Function),
            new Keyword("char",Category.Function),
            new Keyword("charindex",Category.Function),
            new Keyword("concat",Category.Function),
            new Keyword("concat_ws",Category.Function),
            new Keyword("difference",Category.Function),
            new Keyword("format",Category.Function),
            new Keyword("left",Category.Function),
            new Keyword("len",Category.Function),
            new Keyword("lower",Category.Function),
            new Keyword("ltrim",Category.Function),
            new Keyword("nchar",Category.Function),
            new Keyword("patindex",Category.Function),
            new Keyword("quotename",Category.Function),
            new Keyword("replace",Category.Function),
            new Keyword("replicate",Category.Function),
            new Keyword("reverse",Category.Function),
            new Keyword("right",Category.Function),
            new Keyword("rtrim",Category.Function),
            new Keyword("soundex",Category.Function),
            new Keyword("space",Category.Function),
            new Keyword("str",Category.Function),
            new Keyword("string_agg",Category.Function),
            new Keyword("string_escape",Category.Function),
            new Keyword("string_split",Category.Function),
            new Keyword("stuff",Category.Function),
            new Keyword("substring",Category.Function),
            new Keyword("translate",Category.Function),
            new Keyword("trim",Category.Function),
            new Keyword("upper",Category.Function),
            new Keyword("unicode",Category.Function),
            //jsons
            new Keyword("isjson",Category.Function),
            new Keyword("json_value",Category.Function),
            new Keyword("json_query",Category.Function),
            new Keyword("json_modify",Category.Function),
            //datetimes
            new Keyword("sysdatetime",Category.Function),
            new Keyword("sysdatetimeoffset",Category.Function),
            new Keyword("sysutcdatetime",Category.Function),
            new Keyword("current_timestamp",Category.Function),
            new Keyword("getdate",Category.Function),
            new Keyword("getutcdate",Category.Function),
            new Keyword("datename",Category.Function),
            new Keyword("datepart",Category.Function),
            new Keyword("day",Category.Function),
            new Keyword("month",Category.Function),
            new Keyword("year",Category.Function),
            new Keyword("datefromparts",Category.Function),
            new Keyword("datetime2fromparts",Category.Function),
            new Keyword("datetimefromparts",Category.Function),
            new Keyword("datetimeoffsetfromparts",Category.Function),
            new Keyword("smalldatetimefromparts",Category.Function),
            new Keyword("timefromparts",Category.Function),
            new Keyword("datediff",Category.Function),
            new Keyword("datediff_big",Category.Function),
            new Keyword("dateadd",Category.Function),
            new Keyword("eomonth",Category.Function),
            new Keyword("switchoffset",Category.Function),
            new Keyword("todatetimeoffset",Category.Function),
            new Keyword("@@datefirst",Category.Function),
            new Keyword("datefirst",Category.Function),
            new Keyword("dateformat",Category.Function),
            new Keyword("dateformat",Category.Function),
            new Keyword("@@language",Category.Function),
            new Keyword("language",Category.Function),
            new Keyword("sp_helplanguage",Category.Function),
            new Keyword("isdate",Category.Function),
            //conversion
            new Keyword("cast",Category.Function),
            new Keyword("convert",Category.Function),
            new Keyword("parse",Category.Function),
            new Keyword("try_cast",Category.Function),
            new Keyword("try_convert",Category.Function),
            new Keyword("try_parse",Category.Function),
            //mathematicals
            new Keyword("abs",Category.Function),
            new Keyword("degrees",Category.Function),
            new Keyword("rand",Category.Function),
            new Keyword("acos",Category.Function),
            new Keyword("exp",Category.Function),
            new Keyword("round",Category.Function),
            new Keyword("asin",Category.Function),
            new Keyword("floor",Category.Function),
            new Keyword("sign",Category.Function),
            new Keyword("atan",Category.Function),
            new Keyword("log",Category.Function),
            new Keyword("sin",Category.Function),
            new Keyword("sin",Category.Function),
            new Keyword("atan2",Category.Function),
            new Keyword("log10",Category.Function),
            new Keyword("sqrt",Category.Function),
            new Keyword("ceiling",Category.Function),
            new Keyword("pi",Category.Function),
            new Keyword("square",Category.Function),
            new Keyword("cos",Category.Function),
            new Keyword("power",Category.Function),
            new Keyword("tan",Category.Function),
            new Keyword("cot",Category.Function),
            new Keyword("radians",Category.Function),
            //
            new Keyword("rank",Category.Function),
            new Keyword("over",Category.Function),
            new Keyword("top",Category.Function),
            new Keyword("row_number",Category.Function),
            new Keyword("print",Category.Function),
            //datatypes
            new Keyword("bit",Category.DataType),
            new Keyword("int",Category.DataType),
            new Keyword("bitint",Category.DataType),
            new Keyword("smallint",Category.DataType),
            new Keyword("tinyint",Category.DataType),
            new Keyword("real",Category.DataType),
            new Keyword("float",Category.DataType),
            new Keyword("decimal",Category.DataType),
            new Keyword("numeric",Category.DataType),
            new Keyword("money",Category.DataType),
            new Keyword("smallmoney",Category.DataType),
            new Keyword("char",Category.DataType),
            new Keyword("nchar",Category.DataType),
            new Keyword("varchar",Category.DataType),
            new Keyword("nvarchar",Category.DataType),
            new Keyword("text",Category.DataType),
            new Keyword("ntext",Category.DataType),
            new Keyword("date",Category.DataType),
            new Keyword("time",Category.DataType),
            new Keyword("datetime",Category.DataType),
            new Keyword("datetime2",Category.DataType),
            new Keyword("smalldatetime",Category.DataType),
            new Keyword("datetimeoffset",Category.DataType),
            new Keyword("binary",Category.DataType),
            new Keyword("varbinary",Category.DataType),
            new Keyword("image",Category.DataType),
            new Keyword("rowversion",Category.DataType),
            new Keyword("hierarchyid",Category.DataType),
            new Keyword("uniqueidentifier",Category.DataType),
            new Keyword("sql_variant",Category.DataType),
            new Keyword("xml",Category.DataType),
            new Keyword("geometry",Category.DataType),
            new Keyword("geography",Category.DataType)
        };

        public enum Category
        {
            Keyword,
            Function,
            Operator,
            Variable,
            DataType
        }

        public class Keyword
        {
            public string Name { get; }
            public Category Category { get; }

            internal Keyword(string name, Category category)
            {
                Name = name;
                Category = category;
            }
        }
    }
}
